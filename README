CocoaFob
========

TABLE OF CONTENTS
=================

1. DESCRIPTION
2. USAGE
3. GENERATING KEYS
4. LICENCE
5. CREDITS

1. DESCRIPTION
==============

CocoaFob is a set of helper code snippets for registration code generation and
verification in Objective-C applications, integrated with registration code
generation in Potion Store <http://www.potionfactory.com/potionstore>.

The current implementation uses DSA to generate registration keys, which
significantly reduces chances of crackers producing key generators for your
software. Unfortunately, it also means the registration code can be quite long
and has variable length.

To make registration codes human-readable, CocoaFob encodes them using a
slightly modified base32 to avoid ambiguous characters. It also groups codes
in sets of five characters separated by dashes. A sample registration code
produced using a 512-bit DSA key looks like this:

GAWQE-FCUGU-7Z5JE-WEVRA-PSGEQ-Y25KX-9ZJQQ-GJTQC-CUAJL-ATBR9-WV887-8KAJM-QK7DT-EZHXJ-CR99C-A

One of the advantages of DSA is that for a given registration name, each
generated code is different, as there is a random element introduced during
the process.

Providing a Registration Source String
--------------------------------------

To register an application that uses CocoaFob, it is necessary to provide a
string of source information, which may be as simple as a registration name
and arbitrarily complex in case your application is processing the included
information in a user-friendly way. For example, as suggested in the sample
implementation of Potion Store licence generator, a source string may contain
application name, user name and number of copies:

decloner|Joe Bloggs|1

When sending registration mail, you need to provide both the source string and
the registration code. Potion Store does this for you. However, small
modifications are needed to make automatic activation work.

Automatic Activation
--------------------

Potion Store supports automatic activation of an installed application by
clicking on a special link in a registration email or on the Thank You store
page. For this to work, you need to:

- make your application support a registration URL scheme;

- modify Potion Store so that automatic activation link contains not only
  registration code, but registration source string as well.

<more info coming>

2. USAGE
========

<to be written>

3. GENERATING KEYS
==================

NOTE: Included keys are for demonstration and testing purposes only. DO NOT
USE THE INCLUDE KEYS IN YOUR SOFTWARE. Before incorporating CocoaFob into your
application, you need to generate a pair of your own DSA keys. I used key
length of 512 bit which I thought was enough for the registration code
generation purposes.

(1) Generate DSA parameters:

openssl dsaparam -out dsaparam.pem 512

(2) Generate an unencrypted DSA private key:

openssl gendsa -out privkey.pem dsaparam.pem

(3) Extract public key from private key:

openssl dsa -in privkey.pem -pubout -out pubkey.pem

4. LICENCE
==========

CocoaFob is Copyright (C) 2009 PixelEspresso
<http://www.pixelespressoapps.com>. All rights reserved. Written by Gleb
Dolgich (Twitter: @gbd)

CocoaFob is distributed under Creative Commons Attribution 3.0 License
<http://creativecommons.org/licenses/by/3.0/>. Attribution may take form of a
mention in your application About box or other documentation.

5. CREDITS
==========

Base32 implementation is Copyright (C) 2007 by Samuel Tesla and comes from
Ruby base32 gem: <http://rubyforge.org/projects/base32/>. Samuel Tesla's blog
is at <http://blog.alieniloquent.com/tag/base32/>.

OpenSSL key generation HOWTO: <http://www.openssl.org/docs/HOWTO/keys.txt>
